/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 find the sum of the even-valued terms.
 */

public class Euler3 {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		 System.out.println(primeFactors(600851475143L));
	}

	public static Long primeFactors(long l) {
		int div = 2;

		while(true) {
			if (isPrime(div) && ((l % div) == 0)) {
				l = l / div;
				if(isPrime(l)){
					return l;
				}
			}

			div++;
		}
	}

	public static final boolean isPrime(long n) {
		double maxFactor = Math.ceil(Math.sqrt(n));
		if (n == 2) {
			return true;
		}
		for (int i = 2; i <= maxFactor; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}

}
